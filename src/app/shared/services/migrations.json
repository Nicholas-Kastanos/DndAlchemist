[
    {
        "Name": "Create Characters Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS Characters(Id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Create Essences Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS Essances(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Create BaseConcoctions",
        "RawSql": "CREATE TABLE IF NOT EXISTS BaseConcoctions(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE, BaseEffect TEXT NOT NULL);"
    },
    {
        "Name": "Insert Essances",
        "RawSql": "INSERT INTO Essances(Name) VALUES ('Air'),('Earth'),('Ether'),('Fire'),('Water');"
    },
    {
        "Name": "Create BaseConcoctionEssances",
        "RawSql": " CREATE TABLE IF NOT EXISTS BaseConcoctionEssances(Id Integer PRIMARY KEY AUTOINCREMENT, BaseConcoctionId INTEGER NOT NULL, EssanceId INTEGER NOT NULL, FOREIGN KEY (BaseConcoctionId) REFERENCES BaseConcoctions (Id), FOREIGN KEY (EssanceId) REFERENCES Essances (Id));"
    },
    {
        "Name": "Create Biomes Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS Biomes(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Insert Biomes",
        "RawSql": "INSERT INTO Biomes(Name) VALUES ('Arctic'),('Coast'),('Desert'),('Forest'),('Grassland'),('Hill'),('Mountain'),('Swamp'),('Underdark');"
    },
    {
        "Name": "Drop Table BaseConcoctionEssances",
        "RawSql": "DROP TABLE BaseConcoctionEssances;"
    }
    ,
    {
        "Name": "Drop Table Essances",
        "RawSql": "DROP TABLE Essances;"
    },
    {
        "Name": "Recreate Essences Table with correct spelling",
        "RawSql": "CREATE TABLE IF NOT EXISTS Essences(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Insert Essences",
        "RawSql": "INSERT INTO Essences(Name) VALUES ('Air'),('Earth'),('Ether'),('Fire'),('Water');"
    },
    {
        "Name": "Create BaseConcoctionEssences",
        "RawSql": " CREATE TABLE IF NOT EXISTS BaseConcoctionEssences(Id Integer PRIMARY KEY AUTOINCREMENT, BaseConcoctionId INTEGER NOT NULL, EssenceId INTEGER NOT NULL, FOREIGN KEY (BaseConcoctionId) REFERENCES BaseConcoctions (Id), FOREIGN KEY (EssenceId) REFERENCES Essences (Id));"
    },
    {
        "Name": "Create Rarities Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS Rarities(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Insert Rarities",
        "RawSql": "INSERT INTO Rarities(Name) VALUES ('Common'),('Uncommon'),('Rare'),('Very Rare'),('Legendary'),('Artifact');"
    },
    {
        "Name": "Create Damage Types Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS DamageTypes(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE);"
    },
    {
        "Name": "Insert Damage Types",
        "RawSql": "INSERT INTO DamageTypes(Name) VALUES ('Acid'),('Bludgeoning'),('Cold'),('Fire'),('Force'),('Lightning'),('Necrotic'),('Piercing'),('Poison'),('Psychic'),('Radiant'),('Slashing'),('Thunder');"
    },
    {
        "Name": "Create Ingredients Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS Ingredients(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE, Details TEXT, RarityId INTEGER, DamageTypeId INTEGER, IncreaseHealing BIT NOT NULL, IncreaseArcaneRecovery BIT NOT NULL, IncreaseDamageNumber BIT NOT NULL, IncreaseDamageSize BIT NOT NULL, IncreaseSave BIT NOT NULL, DoubleDuration BIT NOT NULL, DoubleBombRadius BIT NOT NULL, DoubleDustArea BIT NOT NULL, ExtraOilUse BIT NOT NULL, DisadvantageDex BIT NOT NULL, DisadvantageCon BIT NOT NULL, DisadvantageWis BIT NOT NULL, DisadvantageSaves BIT NOT NULL, AddDamageTypeBomb BIT NOT NULL, AddDamageTypeDust BIT NOT NULL, AddDamageTypePoison BIT NOT NULL, AddDamageTypePotion BIT NOT NULL, FOREIGN KEY (DamageTypeId) REFERENCES DamageTypes(Id), FOREIGN KEY (RarityId) REFERENCES Rarities(Id));"
    },
    {
        "Name": "Create IngredientEssences Table",
        "RawSql": "CREATE TABLE IF NOT EXISTS IngredientEssences(Id INTEGER PRIMARY KEY AUTOINCREMENT, IngredientId INTEGER NOT NULL, EssenceId INTEGER NOT NULL, FOREIGN KEY (IngredientId) REFERENCES Ingredients(Id), FOREIGN KEY (EssenceId) REFERENCES Essences (Id));"
    },
    {
        "Name": "Create IngredientBiomes Table",
        "RawSql": " CREATE TABLE IF NOT EXISTS IngredientBiomes(Id INTEGER PRIMARY KEY AUTOINCREMENT, IngredientId INTEGER NOT NULL, BiomeId INTEGER NOT NULL, FOREIGN KEY (IngredientId) REFERENCES Ingredients(Id), FOREIGN KEY (BiomeId) REFERENCES Biomes (Id));"
    },
    {
        "Name": "Drop IngredientEssences Table 20200620",
        "RawSql": "DROP TABLE IngredientEssences;"
    },
    {
        "Name": "Drop IngredientBiomes Table 20200620",
        "RawSql": "DROP TABLE IngredientBiomes;"
    },
    {
        "Name": "Drop Ingredients Table 20200620",
        "RawSql": "DROP TABLE Ingredients;"
    },
    {
        "Name": "Create Ingredients Table 20200620",
        "RawSql": "CREATE TABLE IF NOT EXISTS Ingredients(Id Integer PRIMARY KEY AUTOINCREMENT, Name TEXT NOT NULL UNIQUE, Details TEXT, RarityId INTEGER, DamageTypeId INTEGER, IncreaseHealing BIT NOT NULL, IncreaseArcaneRecovery BIT NOT NULL, IncreaseDamageNumber BIT NOT NULL, IncreaseDamageSize BIT NOT NULL, IncreaseSave BIT NOT NULL, DoubleDuration BIT NOT NULL, DoubleBombRadius BIT NOT NULL, DoubleDustArea BIT NOT NULL, ExtraOilUse BIT NOT NULL, DisadvantageDex BIT NOT NULL, DisadvantageCon BIT NOT NULL, DisadvantageWis BIT NOT NULL, DisadvantageSaves BIT NOT NULL, AddDamageTypeBomb BIT NOT NULL, AddDamageTypeDust BIT NOT NULL, AddDamageTypeOil BIT NOT NULL, AddDamageTypePotion BIT NOT NULL, FOREIGN KEY (DamageTypeId) REFERENCES DamageTypes(Id), FOREIGN KEY (RarityId) REFERENCES Rarities(Id));"
    },
    {
        "Name": "Create IngredientEssences Table 20200620",
        "RawSql": "CREATE TABLE IF NOT EXISTS IngredientEssences(Id INTEGER PRIMARY KEY AUTOINCREMENT, IngredientId INTEGER NOT NULL, EssenceId INTEGER NOT NULL, FOREIGN KEY (IngredientId) REFERENCES Ingredients(Id), FOREIGN KEY (EssenceId) REFERENCES Essences (Id));"
    },
    {
        "Name": "Create IngredientBiomes Table 20200620",
        "RawSql": " CREATE TABLE IF NOT EXISTS IngredientBiomes(Id INTEGER PRIMARY KEY AUTOINCREMENT, IngredientId INTEGER NOT NULL, BiomeId INTEGER NOT NULL, FOREIGN KEY (IngredientId) REFERENCES Ingredients(Id), FOREIGN KEY (BiomeId) REFERENCES Biomes (Id));"
    },
    {
        "Name": "Add Healing and Arcane Recovery damage types",
        "RawSql": "INSERT INTO DamageTypes(Name) VALUES ('Healing'),('Arcane Recovery');"
    }
]